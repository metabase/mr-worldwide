(ns mr-worldwide.build.artifacts
  (:require
   [clojure.pprint :as pprint]
   [mr-worldwide.build.artifacts.clj :as clj]
   [mr-worldwide.build.artifacts.cljs :as cljs]
   [mr-worldwide.build.common :as common]
   [mr-worldwide.build.util :as u]))

(defn- locales-dot-edn [config]
  {:locales  (conj (common/locales config) "en")
   ;; TODO FIXME
   :packages ["metabase"]
   :bundle   "metabase.Messages"})

(defn- generate-locales-dot-edn! [{:keys [target-directory], :as config}]
  (let [file (u/filename target-directory "locales.clj")] ; FIXME make this configurable?
    (u/delete-file-if-exists! file)
    (spit file
          (with-out-str
            (println ";; DO NOT EDIT THIS FILE!")
            (println ";; It is autogenerated by `mr-worldwide.build.artifacts` as part of the release process.")
            (pprint/pprint (locales-dot-edn config))))
    (u/assert-file-exists file)))

(defn- create-artifacts-for-locale! [config locale]
  (printf "Create artifacts for locale %s\n" (pr-str locale))
  (cljs/create-artifact-for-locale! config locale)
  (clj/create-artifact-for-locale! config locale)
  (printf "Artifacts for locale %s created successfully.\n" (pr-str locale)))

(defn- create-artifacts-for-all-locales! [config]
  ;; Empty directory in case some locales were removed
  (u/delete-file-if-exists! (:backend-target-directory config))
  (u/delete-file-if-exists! (:frontend-target-directory config))
  (doseq [locale (common/locales config)]
    (create-artifacts-for-locale! config locale)))

(defn create-artifacts!
  "Create Clojure(Script) i18n artifacts."
  [config]
  (println "Create i18n artifacts")
  (generate-locales-dot-edn! config)
  (create-artifacts-for-all-locales! config)
  (println "Translation resources built successfully."))
